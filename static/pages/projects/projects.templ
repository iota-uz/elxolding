package projects

import (
	"fmt"
	"github.com/iota-agency/iota-sdk/components/base"
	"github.com/iota-agency/iota-sdk/components/base/button"
	"github.com/iota-agency/iota-sdk/components/base/input"
	"github.com/iota-agency/iota-sdk/pkg/presentation/templates/icons"
	"github.com/iota-agency/iota-sdk/pkg/presentation/templates/layouts"
	"github.com/iota-agency/iota-sdk/pkg/presentation/viewmodels"
	"github.com/iota-agency/iota-sdk/pkg/types"
)

type IndexPageProps struct {
	*types.PageContext
	Projects []*viewmodels.Project
	NewURL   string
}

templ ProjectsTable(props *IndexPageProps) {
	@base.Table(&base.TableProps{
		Columns: []*base.TableColumn{
			{Label: "Projects.List.Name", Key: "name"},
			{Label: "Projects.List.Description", Key: "description"},
			{Label: "UpdatedAt", Key: "updatedAt"},
			{Label: "Actions", Class: "w-16"},
		},
		Localizer: props.Localizer,
	}) {
		for _, project := range props.Projects {
			@base.TableRow() {
				@base.TableCell() {
					{ project.Name }
				}
				@base.TableCell() {
					{ project.Description }
				}
				@base.TableCell() {
					<div x-data="relativeformat">
						<span x-text={ fmt.Sprintf("format('%s')", project.UpdatedAt) }></span>
					</div>
				}
				@base.TableCell() {
					@button.Secondary(button.Props{
						Fixed: true,
						Size:  button.SizeSM,
						Class: "btn-fixed",
						Href:  fmt.Sprintf("/projects/%s", project.ID),
					}) {
						@icons.PencilSimple(icons.Props{Size: "20"})
					}
				}
			}
		}
	}
}

templ ProjectsContent(props *IndexPageProps) {
	<div class="m-6">
		<h1 class="text-2xl font-medium">
			{ props.T("NavigationLinks.Projects") }
		</h1>
		<div class="mt-5 bg-surface-600 border border-primary rounded-lg">
			<form
				class="p-4 flex items-center gap-3"
				hx-get="/projects"
				hx-trigger="keyup changed delay:500ms from:(form input), change changed from:(form select)"
				hx-target="table"
				hx-swap="outerHTML"
			>
				@input.Text(&input.Props{
					Addon: &input.Addon{
						Position:  input.AddonLeft,
						Component: icons.MagnifyingGlass(icons.Props{Size: "20"}),
					},
					Placeholder: props.T("Search"),
					Attrs: templ.Attributes{
						"name": "name",
					},
				})
				@base.Select(&base.SelectProps{
					Prefix: props.T("PerPage"),
					Attrs: templ.Attributes{
						"name": "limit",
					},
				}) {
					<option>15</option>
					<option>25</option>
					<option>50</option>
					<option>100</option>
				}
				@base.Select(&base.SelectProps{Placeholder: props.T("CreatedAt")}) {
					<option>Yesterday</option>
					<option>The day before yesterday</option>
				}
				@button.Primary(button.Props{
					Size: button.SizeNormal,
					Href: props.NewURL,
					Icon: icons.PlusCircle(icons.Props{Size: "18"}),
				}) {
					{ props.T("Projects.List.New") }
				}
			</form>
			@ProjectsTable(props)
		</div>
	</div>
}

templ Index(props *IndexPageProps) {
	@layouts.Authenticated(props.PageContext) {
		@ProjectsContent(props)
	}
}
