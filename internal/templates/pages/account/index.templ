package account

import (
	"github.com/iota-agency/iota-sdk/components"
	"github.com/iota-agency/iota-sdk/components/base"
	"github.com/iota-agency/iota-sdk/components/base/button"
	"github.com/iota-agency/iota-sdk/components/base/input"
	usercomponents "github.com/iota-agency/iota-sdk/components/user"
	"github.com/iota-agency/iota-sdk/pkg/presentation/templates/layouts"
	sdkviewmodels "github.com/iota-agency/iota-sdk/pkg/presentation/viewmodels"
	"github.com/iota-agency/iota-sdk/pkg/types"
)

type ProfilePageProps struct {
	*types.PageContext
	User     *sdkviewmodels.User
	Errors   map[string]string
	PostPath string
}

templ ProfileForm(props *ProfilePageProps) {
	<form
		class="flex flex-col justify-between h-full"
		hx-post={ props.PostPath }
		hx-swap="outerHTML"
	>
		<h1 class="text-2xl font-medium pl-6 pt-6">
			{ props.User.FirstName } { props.User.LastName }
		</h1>
		@base.Card("grid grid-cols-3 gap-4 m-6") {
			@components.UploadInput(&components.UploadInputProps{
				Label:   props.T("Account.BrowseFilesystem"),
				Name:    "AvatarID",
				Class:   "col-span-3",
				Uploads: []*sdkviewmodels.Upload{props.User.Avatar},
			})
			@input.Text(&input.Props{
				Placeholder: props.T("Account.FirstName"),
				Attrs: templ.Attributes{
					"name":  "FirstName",
					"value": props.User.FirstName,
				},
				Error: props.Errors["FirstName"],
			})
			@input.Text(&input.Props{
				Placeholder: props.T("Account.LastName"),
				Attrs: templ.Attributes{
					"name":  "LastName",
					"value": props.User.LastName,
				},
				Error: props.Errors["LastName"],
			})
			@input.Text(&input.Props{
				Placeholder: props.T("Account.MiddleName"),
				Attrs: templ.Attributes{
					"name":  "MiddleName",
					"value": props.User.MiddleName,
				},
				Error: props.Errors["MiddleName"],
			})
			@usercomponents.LanguageSelect(&usercomponents.LanguageSelectProps{
				Label:       props.T("Users.Single.Language"),
				Placeholder: props.T("Users.Single.SelectLanguage"),
				Value:       string(props.User.UILanguage),
				Attrs:       templ.Attributes{"name": "UILanguage"},
				Error:       props.Errors["UILanguage"],
			})
		}
		<div class="h-20 shadow-t-lg border-t w-full flex items-center justify-end px-8 bg-surface-300 border-t-primary mt-auto gap-4">
			@button.Primary(button.Props{
				Size: button.SizeMD,
				Attrs: templ.Attributes{
					"type": "submit",
					"id":   "save-btn",
				}},
			) {
				{ props.T("Account.Save") }
			}
		</div>
	</form>
}

templ Index(props *ProfilePageProps) {
	@layouts.Authenticated(props.PageContext) {
		@ProfileForm(props)
	}
}
