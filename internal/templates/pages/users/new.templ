package users

import (
	"github.com/iota-uz/iota-sdk/modules/core/domain/aggregates/role"
	"github.com/iota-uz/iota-sdk/modules/core/domain/aggregates/user"
	"github.com/iota-uz/iota-sdk/components/base"
	"github.com/iota-uz/iota-sdk/components/base/button"
	"github.com/iota-uz/iota-sdk/components/base/input"
	usercomponents "github.com/iota-uz/iota-sdk/components/user"
	"github.com/iota-uz/iota-sdk/modules/core/presentation/templates/layouts"
	"github.com/iota-uz/iota-sdk/pkg/types"
)

type CreateFormProps struct {
	*types.PageContext
	User   user.User
	Roles  []*role.Role
	Errors map[string]string
}

templ CreateForm(props *CreateFormProps) {
	<form
		class="flex flex-col justify-between h-full"
		hx-post="/users"
		hx-swap="outerHTML"
		hx-indicator="#save-btn"
	>
		@base.Card("grid grid-cols-3 gap-4 m-6") {
			@input.Text(&input.Props{
				Label: props.T("Users.Single.FirstName"),
				Attrs: templ.Attributes{"name": "FirstName", "value": props.User.FirstName},
				Error: props.Errors["FirstName"],
			})
			@input.Text(&input.Props{
				Label: props.T("Users.Single.LastName"),
				Attrs: templ.Attributes{"name": "LastName", "value": props.User.LastName},
				Error: props.Errors["LastName"],
			})
			@input.Password(&input.Props{
				Label:       props.T("Users.Single.Password"),
				Placeholder: props.T("Users.Single.EnterPassword"),
				Attrs: templ.Attributes{
					"autocomplete": "new-password",
					"name":         "Password",
				},
				Error: props.Errors["Password"],
			})
			@RoleSelect(&RoleSelectProps{
				PageContext: props.PageContext,
				Roles:       props.Roles,
				Error:       props.Errors["RoleID"],
			})
			@usercomponents.LanguageSelect(&usercomponents.LanguageSelectProps{
				Label:       props.T("Users.Single.Language"),
				Placeholder: props.T("Users.Single.SelectLanguage"),
				Value:       string(props.User.UILanguage),
				Attrs:       templ.Attributes{"name": "Language"},
			})
		}
		<div class="h-20 shadow-t-lg border-t w-full flex items-center justify-end px-8 bg-surface-300 border-t-primary mt-auto gap-4">
			@button.Primary(button.Props{
				Size: button.SizeMD,
				Attrs: templ.Attributes{
					"id": "save-btn",
				},
			}) {
				{ props.T("Save") }
			}
		</div>
	</form>
}

templ New(props *CreateFormProps) {
	@layouts.Authenticated(props.PageContext) {
		@CreateForm(props)
	}
}
