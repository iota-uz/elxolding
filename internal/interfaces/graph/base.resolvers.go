package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.57

import (
	"context"
	"fmt"
)

// Add is the resolver for the add field.
func (r *mutationResolver) Add(ctx context.Context, a int, b int) (int, error) {
	panic(fmt.Errorf("not implemented: Add - add"))
}

// Hello is the resolver for the hello field.
func (r *queryResolver) Hello(ctx context.Context, name *string) (*string, error) {
	panic(fmt.Errorf("not implemented: Hello - hello"))
}

// Counter is the resolver for the counter field.
func (r *subscriptionResolver) Counter(ctx context.Context) (<-chan int, error) {
	panic(fmt.Errorf("not implemented: Counter - counter"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// Subscription returns SubscriptionResolver implementation.
func (r *Resolver) Subscription() SubscriptionResolver { return &subscriptionResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
type subscriptionResolver struct{ *Resolver }
